/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package buscador;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import org.apache.lucene.document.Document;
import org.apache.lucene.facet.FacetResult;
import org.apache.lucene.facet.LabelAndValue;
import org.apache.lucene.queryparser.classic.ParseException;

/**
 *
 * @author alonso
 */
public class VentanaPrincipal extends javax.swing.JFrame {
    private static Busqueda buscador;
    /**
     * Creates new form VentanaPrincipal
     */
    public VentanaPrincipal() throws IOException {
        initComponents();
        buscador = new Busqueda();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        selectorCampoBusqueda1 = new javax.swing.JComboBox<>();
        criterioBusqueda1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        botonBuscar = new javax.swing.JButton();
        facetaTamanio = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        facetaInstitucion = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        selectorCampo1Busqueda2 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        selectorCampo2Busqueda2 = new javax.swing.JComboBox<>();
        criterio2Busqueda2 = new javax.swing.JTextField();
        criterio1Busqueda2 = new javax.swing.JTextField();
        busqueda2 = new javax.swing.JRadioButton();
        busqueda1 = new javax.swing.JRadioButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultados = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaFacetas = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        cerrarAplicacion = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(jLabel1.getFont().deriveFont(jLabel1.getFont().getStyle() | java.awt.Font.BOLD, 20));
        jLabel1.setText("INTERFAZ DE USUARIO DEL SISTEMA DE RECUPERACIÓN DE INFORMACIÓN");

        selectorCampoBusqueda1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Título","Autor", "Institución", "País", "Longitud documento", "Resumen","Texto" }));
        selectorCampoBusqueda1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectorCampoBusqueda1ActionPerformed(evt);
            }
        });

        jLabel3.setText("RESULTADOS DE LA BÚSQUEDA: ");

        botonBuscar.setText("BUSCAR");
        botonBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBuscarActionPerformed(evt);
            }
        });

        facetaTamanio.setText("Tamaño de documento");
        facetaTamanio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facetaTamanioActionPerformed(evt);
            }
        });

        jLabel4.setText("Facetas:");

        facetaInstitucion.setText("Institución");
        facetaInstitucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                facetaInstitucionActionPerformed(evt);
            }
        });

        jLabel5.setText("Realice el tipo de búsqueda que desee (1 o 2) y después pulse en \"BUSCAR\". ");

        selectorCampo1Busqueda2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Título","Autor", "Institución", "País", "Longitud documento", "Resumen","Texto"  }));

        jLabel7.setText("AND");

        selectorCampo2Busqueda2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Título","Autor", "Institución", "País", "Longitud documento", "Resumen","Texto"  }));

        busqueda2.setText("2. Seleccione los campos y criterios de búsqueda booleanos:");

        busqueda1.setText("1. Introduzca el criterio de búsqueda y el campo de búsqueda:");

        resultados.setColumns(20);
        resultados.setRows(5);
        jScrollPane2.setViewportView(resultados);

        listaFacetas.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = {};
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaFacetas);

        jMenu1.setText("File");

        cerrarAplicacion.setText("Cerrar");
        cerrarAplicacion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cerrarAplicacionActionPerformed(evt);
            }
        });
        jMenu1.add(cerrarAplicacion);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(16, 16, 16)
                                .addComponent(botonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(facetaTamanio)
                            .addComponent(jLabel4)
                            .addComponent(facetaInstitucion)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(busqueda2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(busqueda1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(604, 604, 604)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(criterio1Busqueda2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(selectorCampo1Busqueda2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(22, 22, 22)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(criterio2Busqueda2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(criterioBusqueda1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(selectorCampo2Busqueda2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(selectorCampoBusqueda1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectorCampoBusqueda1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(criterioBusqueda1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(busqueda1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectorCampo1Busqueda2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(selectorCampo2Busqueda2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(criterio2Busqueda2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(criterio1Busqueda2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(busqueda2))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(facetaTamanio)
                                .addGap(18, 18, 18)
                                .addComponent(facetaInstitucion)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 355, Short.MAX_VALUE))
                            .addComponent(jScrollPane2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(botonBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectorCampoBusqueda1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectorCampoBusqueda1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectorCampoBusqueda1ActionPerformed
    
    private String conversorCampo(String campo){
        String resultado = "";
        switch(campo){
            case "Autor": resultado = "author"; break;
            case "Institución": resultado = "institution"; break;
            case "Longitud documento": resultado = "size"; break;
            case "País": resultado = "country"; break;
            case "Resumen": resultado = "brief"; break;
            case "Texto": resultado = "text"; break;
            case "Título": resultado = "title"; break;
        }
        
        return resultado;
    }
    
    private void imprimir(ArrayList<Document> documento){
        this.resultados.setText("");
        String cadena = "";
        for(int i = 0; i < documento.size(); i++){
                   
            String [] autores = documento.get(i).getValues("author");
            String [] paises = documento.get(i).getValues("country");
            String [] instituciones = documento.get(i).getValues("institution");
            String todosAutores = "";
            String todosPaises = "";
            String todasInstituciones = "";

            for (String autor : autores){
                todosAutores += (autor + "  ");
            }

            for (String pais : paises){
                todosPaises += (pais + "  ");
            }
            
            for (String institucion : instituciones){
                todasInstituciones += (institucion + "  ");
            }

            cadena += "Nombre documento: " + documento.get(i).get("namefile") + "\n" + 
                    "\t - Título documento: " + documento.get(i).get("title") +  "\n" +
                    "\t - Autores documento: " + todosAutores + "\n" + 
                    "\t - Instituciones documento: " + todasInstituciones + "\n" + 
                    "\t - Paises documento: " + todosPaises + "\n" + 
                    "\t - Resumen documento: " + documento.get(i).get("brief") +  "\n" +
                    "\t - Tamaño documento (KB): " + documento.get(i).get("size") + "\n" + 
                    "################################################################## \n";

        }
        this.resultados.setText(cadena);
    }
    private void botonBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBuscarActionPerformed
        if(busqueda1.isSelected() && busqueda2.isSelected()){   
            
            
            JOptionPane.showMessageDialog(this, "No se puede seleccionar los dos tipos de consulta" ,"Algo has introducido mal...",  JOptionPane.ERROR_MESSAGE);
            
        }else if(busqueda1.isSelected()){
            String criterio = criterioBusqueda1.getText();
            String campo = conversorCampo((String) this.selectorCampoBusqueda1.getSelectedItem());

            try {

                ArrayList<Document> documentos = buscador.search(campo, criterio);
                imprimir(documentos);

            } catch (ParseException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }

        }else if(busqueda2.isSelected()){ //Búsqueda booleana
            String criterio1 = this.criterio1Busqueda2.getText();
            String criterio2 = this.criterio2Busqueda2.getText();

            String campo1 = conversorCampo((String) this.selectorCampo1Busqueda2.getSelectedItem());
            String campo2 = conversorCampo((String) this.selectorCampo2Busqueda2.getSelectedItem());

            try {
                ArrayList<Document> documentos = buscador.booleanSearch(campo1, criterio1, campo2, criterio2);
                imprimir(documentos);

            } catch (IOException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
        if(!buscador.consultaRealizada())
            noMostrarFacetas();
        else
            mostrarFacetas();
        //Búsqueda por Facetas.
        if(facetaTamanio.isSelected() && facetaInstitucion.isSelected())
            JOptionPane.showMessageDialog(this, "Se encuentran seleccionadas dos categorías" ,"Algo has introducido mal...",  JOptionPane.ERROR_MESSAGE);
        else if((facetaTamanio.isSelected() || facetaInstitucion.isSelected()) && !listaFacetas.isSelectionEmpty()){
   
            String seleccion = listaFacetas.getSelectedValue();
            String valor = "";
            String faceta  ="";
            int valorInf = 0;
            int valorSup = 0;

            if(facetaTamanio.isSelected()){

                valor = seleccion.substring(seleccion.indexOf("["), seleccion.indexOf("]") + 1);
                String valorInferior = valor.substring(1,valor.indexOf("-"));
                valorInf = Integer.parseInt(valorInferior);
                String valorSuperior = valor.substring(valor.indexOf("-")+1,valor.indexOf("]"));
                valorSup = Integer.parseInt(valorSuperior);
                faceta = "size";

            }else{
                valor = seleccion.substring(0, seleccion.indexOf(" ("));
                faceta = "institution";
            }

            try {

                ArrayList<Document> documentos = new ArrayList<>();
                if(this.facetaInstitucion.isSelected())
                    documentos = buscador.buscarPorFaceta(faceta,valor);
                else
                    for(int i = valorInf; i <= valorSup; i++)
                        documentos.addAll(buscador.buscarPorFaceta(faceta,Integer.toString(i)));

                imprimir(documentos);

            } catch (IOException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }             
        }
        
        if(facetaTamanio.isSelected())
            imprimirFacetaTamanio();
        else
            imprimirFacetaInstitucion();  
    }//GEN-LAST:event_botonBuscarActionPerformed

    private void imprimirFacetaTamanio(){
        if(!buscador.consultaRealizada()){
            JOptionPane.showMessageDialog(this, "No se puede seleccionar sin realizar antes una consulta" ,"Algo has introducido mal...",  JOptionPane.ERROR_MESSAGE);
        }else if(facetaTamanio.isSelected()){
            try {
                ArrayList<String> facetas = new ArrayList<>(); 
                List<FacetResult> tamanios = this.buscador.obtenerFacetaSizeRango();
                for(FacetResult fr: tamanios){
                    for(LabelAndValue lv: fr.labelValues){
                        facetas.add(lv.label + "("+ lv.value + ")");
                    }
                }
                String listaDeFacetas[] = new String[facetas.size()];
                listaDeFacetas = facetas.toArray(listaDeFacetas);
                this.listaFacetas.setListData(listaDeFacetas);
            } catch (IOException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(!facetaTamanio.isSelected() && !facetaInstitucion.isSelected())
            listaFacetas.setListData(new String[0]);
    }
    
    private void facetaTamanioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facetaTamanioActionPerformed
        if(facetaTamanio.isSelected() && facetaInstitucion.isSelected())
            JOptionPane.showMessageDialog(this, "Se encuentran seleccionadas dos categorías" ,"Algo has introducido mal...",  JOptionPane.ERROR_MESSAGE);
        imprimirFacetaTamanio();            
    }//GEN-LAST:event_facetaTamanioActionPerformed

    private void cerrarAplicacionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cerrarAplicacionActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_cerrarAplicacionActionPerformed

    private void imprimirFacetaInstitucion(){
        if(!buscador.consultaRealizada()){
            JOptionPane.showMessageDialog(this, "No se puede seleccionar sin realizar antes una consulta" ,"Algo has introducido mal...",  JOptionPane.ERROR_MESSAGE);
        }else if(facetaInstitucion.isSelected()){
            try {
                ArrayList<String> facetas = new ArrayList<>(); 
                FacetResult institution = this.buscador.obtenerFacetaInstitucion();
                
                for(LabelAndValue lv: institution.labelValues){
                    facetas.add(lv.label + " ("+ lv.value + ")");
                }
                
                String listaDeFacetas[] = new String[facetas.size()];
                listaDeFacetas = facetas.toArray(listaDeFacetas);
                this.listaFacetas.setListData(listaDeFacetas);
            } catch (IOException ex) {
                Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(!facetaTamanio.isSelected() && !facetaInstitucion.isSelected())
            listaFacetas.setListData(new String[0]);
    }
    
    private void facetaInstitucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_facetaInstitucionActionPerformed
        if(facetaTamanio.isSelected() && facetaInstitucion.isSelected())
            JOptionPane.showMessageDialog(this, "Se encuentran seleccionadas dos categorías" ,"Algo has introducido mal...",  JOptionPane.ERROR_MESSAGE);
        imprimirFacetaInstitucion();
    }//GEN-LAST:event_facetaInstitucionActionPerformed

    private void noMostrarFacetas(){
        this.facetaInstitucion.setEnabled(false);
        this.facetaTamanio.setEnabled(false);
    }
    
    private void mostrarFacetas(){
        this.facetaInstitucion.setEnabled(true);
        this.facetaTamanio.setEnabled(true);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    VentanaPrincipal ventana = new VentanaPrincipal();
                    ventana.setVisible(true);
                    if(!buscador.consultaRealizada()){
                        ventana.noMostrarFacetas();
                    }
                    else 
                        ventana.mostrarFacetas();
                } catch (IOException ex) {
                    Logger.getLogger(VentanaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonBuscar;
    private javax.swing.JRadioButton busqueda1;
    private javax.swing.JRadioButton busqueda2;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuItem cerrarAplicacion;
    private javax.swing.JTextField criterio1Busqueda2;
    private javax.swing.JTextField criterio2Busqueda2;
    private javax.swing.JTextField criterioBusqueda1;
    private javax.swing.JCheckBox facetaInstitucion;
    private javax.swing.JCheckBox facetaTamanio;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listaFacetas;
    private javax.swing.JTextArea resultados;
    private javax.swing.JComboBox<String> selectorCampo1Busqueda2;
    private javax.swing.JComboBox<String> selectorCampo2Busqueda2;
    private javax.swing.JComboBox<String> selectorCampoBusqueda1;
    // End of variables declaration//GEN-END:variables
}
